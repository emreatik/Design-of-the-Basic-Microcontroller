module alu(clk,OPC,IR,clock_cycle,reg1);
input clk;
input clock_cycle;
input [15:0] IR;
input [4:0] OPC;
output [15:0] reg1;

always @(posedge clk)
begin

if(clock_cycle==5)
begin

begin
case(OPC)
00000:reg1=reg1;
00001:IR=IR+1;
00010:IR=IR-1;
00011:reg1=IR;
00101:reg1=IR+reg1;
00110:reg1=reg1<<1;
00111:reg1=reg1>>1;
01010:reg1=111111111111-reg1;
01011:reg1=reg1&&IR;
01100:reg1=reg1||IR;
01101:reg1=reg1^IR;
//01110://GOTO
//01111://
10000://Do Nothing
endcase
end

end
endmodule
